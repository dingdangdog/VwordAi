name: Electron Builder

on:
  workflow_dispatch:
    inputs:
      target:
        description: Input Git Tag (Release Version)
        required: true

jobs:
  create-tag:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}
      - name: Git config
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
      - name: Git target
        run: |
          TAG_NAME="${{ github.event.inputs.target }}"
          git tag $TAG_NAME
          git push origin $TAG_NAME --force

      - name: Get Commit Logs
        id: get_logs
        run: |
          COMMITS=$(git log ${{ github.event.inputs.target }}..HEAD --oneline)
          echo "COMMITS=$COMMITS" >> $GITHUB_ENV

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GH_TOKEN }}
          name: 🎉Release ${{ github.event.inputs.target }}
          tag_name: ${{ github.event.inputs.target }}
          body: ${{ env.COMMITS }}

  electron-package:
    needs: create-tag
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        include:
          - os: macos-latest
            package_command: npm run package -- --mac
            platform: Mac
          - os: ubuntu-latest
            package_command: npm run package -- --linux
            platform: Linux
          - os: windows-latest
            package_command: npm run package -- --win
            platform: Windows
    steps:
      - name: Check out
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      # 前端打包
      - name: Install UI dependencies
        run: cd ui && npm ci --no-interactive
      - name: Build UI
        run: cd ui && npm run build-only
      - name: Install Main dependencies
        run: npm ci --no-interactive

      - name: Package Application
        env:
          NODE_ENV: production
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: ${{ matrix.package_command }}

      - name: Show Builds
        if: ${{ matrix.platform == 'Windows' }}
        run: dir package
      - name: Show Builds
        if: ${{ matrix.platform != 'Windows' }}
        run: ls -la package

      - name: Mac Release
        uses: softprops/action-gh-release@v2
        if: ${{ matrix.platform == 'Mac' }}
        with:
          token: ${{ secrets.GH_TOKEN }}
          name: 🎉Release ${{ github.event.inputs.target }}
          tag_name: ${{ github.event.inputs.target }}
          append_body: true
          # VwordAi-2.0.0-arm64.dmg
          files: |
            package/VwordAi-${{ github.event.inputs.target }}.dmg
            package/VwordAi-${{ github.event.inputs.target }}.zip

      - name: Linux Release
        uses: softprops/action-gh-release@v2
        if: ${{ matrix.platform == 'Linux' }}
        with:
          token: ${{ secrets.GH_TOKEN }}
          name: 🎉Release ${{ github.event.inputs.target }}
          tag_name: ${{ github.event.inputs.target }}
          append_body: true
          # VwordAi_2.0.0_amd64.deb/VwordAi-2.0.0.AppImage
          files: |
            package/VwordAi_${{ github.event.inputs.target }}_amd64.deb
            package/VwordAi-${{ github.event.inputs.target }}.AppImage

      - name: Windows Release
        uses: softprops/action-gh-release@v2
        if: ${{ matrix.platform == 'Windows' }}
        with:
          # make_latest: "true"
          token: ${{ secrets.GH_TOKEN }}
          name: 🎉Release ${{ github.event.inputs.target }}
          tag_name: ${{ github.event.inputs.target }}
          append_body: true
          # VwordAi Setup 2.0.0.exe
          files: package/VwordAi-Setup-${{ github.event.inputs.target }}.exe
